function label = bow_recognition_bayes(histogram, vBoWPos, vBoWNeg)
% Label the histogram by +1 or 0, based on the probability that the
% histogram is generated by a positive or negative sampling respectively.
%
% Input
%   histogram       Histogram to label.
%   vBoWPos         All histograms from the positive samples.
%   vBoWNeg         All histograms from the negative samples.
%
% Output:
%   sLabel          1 if the closest neighbour is positive => contains car
%                   0 if the closest neighbour is negative => no car

%% Initialization
% Calculate the means and std for the positve and negative samples
[muPos, sigmaPos] = computeMeanStd(vBoWPos);
[muNeg, sigmaNeg] = computeMeanStd(vBoWNeg);

%% Probability calculation
% Calculating the probability of appearance each word in observed histogram
% according to normal distribution in each of the positive and negative
% bag of words
yPos = normpdf(histogram, muPos, sigmaPos);
yNeg = normpdf(histogram, muNeg, sigmaNeg);

% Sometimes there are 0 values in all the features for a single dimension,
% resulting in invalid numbers by generating the log out of them.
% Therefore, the index of those dimensions are stored to rewrite them with
% a 0 after the log-function. (This is actually correct, since the
% probability has to be 0 for this dimension)
notValidPos = isnan(yPos);
notValidNeg = isnan(yNeg);

yPos = log(yPos);
yNeg = log(yNeg);
yPos(notValidPos) = 0;
yNeg(notValidNeg) = 0;

% Sum up the probabilities (instead of multiplication thanks to the log)
sumPos = sum(yPos) * 0.5;
sumNeg = sum(yNeg) * 0.5;

%% Label the histogram based on the probability
if sumPos / (sumNeg + sumPos) < 0.5
    label = 1;
else
    label = 0;
end

end